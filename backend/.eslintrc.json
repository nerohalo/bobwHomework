{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "tsconfig.json",
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint/eslint-plugin"
  ],
  "extends": [
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "root": true,
  "env": {
    "node": true,
    "jest": true
  },
  "rules": {
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/type-annotation-spacing": [
      "error",
      {
        "after": true
      }
    ],
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-use-before-define": "error",
    "@typescript-eslint/no-shadow": "error",
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-empty-function": "off",
    "object-curly-spacing": ["error", "always"],
    "key-spacing": ["error", {
      "afterColon": true
    }],
    "quotes": ["error", "single", {
      "avoidEscape": true
    }],
    "comma-spacing": "error",
    "no-trailing-spaces": "error",
    "max-len": ["error", {
      "code": 200
    }],
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
      { "blankLine": "never", "prev": ["const", "let", "var"], "next": ["const", "let", "var"] },
      { "blankLine": "always", "prev": "expression", "next": "*" },
      { "blankLine": "always", "prev": "*", "next": "expression" },
      { "blankLine": "any", "prev": "expression", "next": "expression" },
      { "blankLine": "always", "prev": "block-like", "next": "*" }
    ],
    "no-spaced-func": "error",
    "arrow-spacing": "error",
    "block-spacing": "error",
    "space-in-parens": ["error", "never"],
    "keyword-spacing": "error",
    "no-multi-spaces": "error",
    "no-unreachable": "error",
    "dot-notation": "error",
    "eqeqeq": "error",
    "prefer-destructuring": "error",
    "prefer-const": "error",
    "@typescript-eslint/indent": ["error", "tab"]
  }
}
